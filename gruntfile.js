module.exports = function(grunt){
    grunt.initConfig({
    	watch:{
    		jade:{
            	files:['app/views/**'],
            	options:{
            		livereload:true
            	}
    		},
    		js:{
    			files:['public/js/*.js','app/**/*.js','test/**/*.js'],
    			//tasks:['uglify'],
    			options:{
    				livereload:true//有改动时，重新启动这个服务
    			}
    		}
    	},
        less:{
            development:{
                options:{
                    compress:true,
                    yuicompress:true,
                    optimization:2
                },
                files:{
                    'public/css/index.css':'public/less/index.less'
                }
            }
        },
        uglify: {
            development: {
                files:{
                    'public/build/admin.min.js':'public/js/admin.js',
                    'public/build/detail.min.js':'public/js/detail.js'
                }     
            }  
        },
    	nodemon:{
    		dev:{
    			options:{
    				file:'app.js',
    				args:[],
    				ignoredFiles:['README.md','node_modules/**','.DS_Store'],
    				watchedExtensions:['js'],
    				watchedFolders:['./'],
    				debug:true,
    				delayTime:1,//如果有大批量的改动，需要编译，不必每个文件改动都重启一次，而是会等待XXms后，再来重启服务
    				env:{
    					PORT:3000
    				},
    				cwd:__dirname//当前目录
    			}
    		}
    	},
        mochaTest:{
            src:['test/**/*.js']
        },
    	concurrent:{
    		tasks:['nodemon','watch'],
    		options:{
    			logConcurrentOutput:true
    		}
    	}
    })
    grunt.loadNpmTasks('grunt-contrib-watch');
    //只要文件有添加，修改或删除，去重新执行注册好的任务
    grunt.loadNpmTasks('grunt-contrib-nodemon');
    //用于实施监听app.js,app.js如果有改动，会自动重启app.js
    grunt.loadNpmTasks('grunt-concurrent');
    //针对慢任务开发的插件，如：sass，less等编译，优化构建的时间，同时跑多个左侧任务，比如watch和nodemon
    grunt.loadNpmTasks('grunt-mocha-test');
    //语法检查，设置一些警告
    grunt.loadNpmTasks('grunt-contrib-jshint');
    //less的编译
    grunt.loadNpmTasks('grunt-contrib-less');
    //grunt的压缩
    grunt.loadNpmTasks('grunt-contrib-uglify');
    //单元测试
    grunt.option('force',true);
    //目的：开发的时候，不因为语法错误或警告中断grunt整个服务
    grunt.registerTask('default',['concurrent'])
    grunt.registerTask('test',['mochaTest'])
    //执行任务
    grunt.task.run('less');
    grunt.task.run('uglify');
}