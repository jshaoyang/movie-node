//ObjecyId作为字段的类型，为了实现关联文档的查询，是主键，在mongodb里是一种特殊并主要的类型，每一个schema都会默认配置
//这个属性,属性名是_id,除非自己定义，才可以覆盖他，同时默认这个索引，是利用主键来索引，要实现关联查询，因为在mongodb里是没有关系型数据库的join特性的,所以mongos封装了一个population的功能，也就是当定义schma的时候，指定某一个字段是引用另外的schema,那么在获取document的时候，就可以通过populate方法，让mogos帮你通过引用schema和id,找到关联的文档.
//然后用这个文档的内容，替换掉引用字段的内容，这样就让引用的这个文档，使用起来就像内嵌文档一样，populate方法可以用在文档上，
//模型上,或者是query对象上，可以几乎在任何对象上调用这个方法来填充字段。populate方法在不同对象上，参数也不大一样，但是
//都接收一个options,这样一个参数.
//path  用空格分割引用字段的名称
//select 填充引用document中的哪些字段，
//match  可选，指定附加的一些常用条件，
//model  可选，指定引用的model
//options  可选，指定其他附加的查询条件，比如排序，或者条数的限制等，
//关联文档一定要用objectId作为引用字段类型吗？不是的，mongos还支持其他类型，比如
//ObjectId
//Number
//String
//Buffer
//只不过说引用document主键类型，必须和引用字段类型相对应，在生成环境中，推荐主键类型和引用类型都使用ObjectId,原因一，
//是ObjectId不包括业务含义，二ObjectId 是经过比较复杂的方式生成的，所以很难重复，三，mongos里面默认生成的主键类型
//就是ObjectId,这样可以减少很多配置的操作